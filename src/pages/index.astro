---
import LayoutWithBottomNav from '../layouts/LayoutWithBottomNav.astro';
import VideoPlayer from '../components/VideoPlayer';
import { supabase } from '../lib/supabase'; // Import Supabase client

// Fetch initial videos from Supabase
let initialVideos = [];
try {
  const { data: fetchedVideos, error } = await supabase
    .from('videos') // Query the 'videos' table
    .select(`
      id,         
      video_url,   
      likes,
      shares,
      animals (    
        name,        
        age,       
        species,   
        description,
        image_url 
      )
    `)
    .limit(5); // Fetch, for example, the first 5 videos


  if (error) {
    console.error('Error fetching initial videos from Supabase:', error.message);
  } else if (fetchedVideos) {
    initialVideos = fetchedVideos.map(video => {
      const animalData = video.animals; // Access the joined animal data
      return {
        id: video.id.toString(),
        src: video.video_url || '/videos/default.mp4',
        likes: video.likes || 0,
        comments: 0, // 'videos' table does not have a comments field
        shares: video.shares || 0,
        animalInfo: animalData ? {
          name: animalData.name || 'Nombre no disponible',
          // Ensure age is formatted as a string if it's a number
          age: animalData.age !== null && animalData.age !== undefined ? animalData.age.toString() + ' años' : 'Edad no disponible',
          breed: animalData.species || 'Especie no disponible', // Using species as breed
          location: 'Ubicación no disponible', // 'animals' table does not have location
          description: animalData.description || 'Descripción no disponible',
          image_url: animalData.image_url || '/placeholder-animal.jpg',
          } : {
          name: 'Información del animal no disponible',
          age: 'Edad no disponible',
          breed: 'Especie no disponible',
          location: 'Ubicación no disponible',
          description: 'Descripción no disponible',
          image_url: '/placeholder-animal.jpg',
        }
      };
    });
  }
} catch (e) {
  console.error('Exception when fetching initial videos:', e.message);
  // Handle exception (e.g., network error)
}

// If no videos were fetched, provide a default or empty state
if (initialVideos.length === 0) {
  console.warn('No initial videos loaded from Supabase. Displaying empty or placeholder content.');
  // You might want to set a default video or a message for the user
  // For example:
  // initialVideos = [{
  //   id: 'default-0',
  //   src: '/videos/placeholder.mp4',
  //   likes: 0, comments: 0, shares: 0,
  //   animalInfo: { name: 'No hay videos', age: '', breed: '', location: '', description: 'Intenta de nuevo más tarde.' }
  // }];
}
---
<LayoutWithBottomNav>
    <VideoPlayer 
      client:load
      initialVideos={initialVideos}
      loadMoreVideos={async (page) => {
        // Simular carga de más videos
        console.log(`Cargando página ${page}...`);
        await new Promise(resolve => setTimeout(resolve, 1000));
        
        // Datos de ejemplo para los animales
        const animalExamples = [
          {
            name: 'Toby',
            age: '4 años',
            breed: 'Labrador Retriever',
            location: 'Sevilla, España',
            description: 'Toby es un perro muy juguetón y cariñoso. Le encanta jugar a la pelota y dar largos paseos. Es muy sociable y se lleva bien con otros perros y niños.'
          },
          {
            name: 'Mia',
            age: '2 años',
            breed: 'Gato Persa',
            location: 'Málaga, España',
            description: 'Mia es una gata tranquila y cariñosa. Le gusta dormir en lugares cómodos y recibir mimos. Es muy limpia y ya está esterilizada.'
          },
          {
            name: 'Rex',
            age: '5 años',
            breed: 'Pastor Alemán',
            location: 'Bilbao, España',
            description: 'Rex es un perro leal y protector. Está bien entrenado y es muy obediente. Necesita una familia activa que le proporcione ejercicio diario.'
          }
        ];
        
        // En una aplicación real, aquí harías una llamada a tu API
        return Array(3).fill(0).map((_, i) => {
          const animalIndex = (page * 3 + i) % 3;
          return {
            id: `video-${page * 3 + i + 1}`,
            src: `/videos/video${animalIndex + 1}.mp4`,
            likes: Math.floor(Math.random() * 1000) + 100,
            comments: Math.floor(Math.random() * 500) + 50,
            shares: Math.floor(Math.random() * 200) + 20,
            animalInfo: animalExamples[animalIndex]
          };
        });
      }}
    />
</LayoutWithBottomNav>
