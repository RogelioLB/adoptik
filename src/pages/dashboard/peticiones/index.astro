---
import { supabase } from "../../../lib/supabase";
import PeticionesTable from "../../../components/dashboard/PeticionesTable";
import Layout from "../../../layouts/Layout.astro";
import { FaArrowLeft } from "react-icons/fa";

// Verify admin authentication
const { data: { session } } = await supabase.auth.getSession();
if (!session) {
  return Astro.redirect('/login?redirect=' + encodeURIComponent(Astro.url.pathname));
}

// Verify admin role
const { data: userProfile } = await supabase
  .from('profiles')
  .select('*')
  .eq('user_id', session.user.id)
  .single();

if (!userProfile || userProfile.role !== 'Admin') {
  return Astro.redirect('/');
}

// Fetch all adoption requests with related data
const { data: adoptionRequests, error: requestsError } = await supabase
  .from('adoption_requests')
  .select(`
    *,
    animals(*)
  `)
  .order('created_at', { ascending: false });

// Map adoption requests to include profile information
const mappedRequests = await Promise.all(adoptionRequests?.map(async request => {
    const { user_id, ...rest } = request;
    const { data: profiles } = await supabase
      .from('profiles')
      .select('*')
      .eq('user_id', user_id)
      .single();
    return({
      ...rest,
      animals: request.animals || null,
      profiles: profiles || null,
      user_id: user_id,
    });
}) || []);

---

<Layout title="Adoptik | Dashboard - Gestión de Peticiones">
    <div class="container mx-auto px-4 py-8 h-screen flex flex-col gap-4">
        <div class="flex items-center gap-2">
            <a href="/dashboard" class="text-2xl text-purple-600 hover:text-purple-800 transition" aria-label="Volver al Dashboard">
              <FaArrowLeft size={20} />
            </a>
            <h1 class="text-sm font-bold text-gray-800">Gestión de Peticiones</h1>
          </div>
          <PeticionesTable client:load peticiones={mappedRequests} />
    </div>
</Layout>