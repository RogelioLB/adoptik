---
import Layout from "../../../layouts/Layout.astro";
import { supabase } from "../../../lib/supabase";
import { FaUsers, FaEdit, FaTrashAlt, FaArrowLeft } from "react-icons/fa";
// Ensure database.types.ts is correctly pathed. If it's in 'src/', the path might be '../../database.types.ts'
// If it's in 'src/pages/', then it's '../../database.types.ts' from 'src/pages/dashboard/usuarios/'
import type { Database } from "../../database.types"; 

// Type for a profile, based on your database.types.ts
type Profile = Database['public']['Tables']['profiles']['Row'];

// Role-based access control
const { data: { session: adminSession } } = await supabase.auth.getSession();
if (!adminSession) {
  return Astro.redirect('/'); // Redirect to homepage if not logged in
}
const { data: adminUser } = await supabase.from("profiles").select("role").eq("user_id", adminSession.user.id).single();
if (adminUser?.role !== 'Admin') {
  return Astro.redirect('/'); // Redirect to homepage if not admin
}

let profiles: Profile[] = [];
let fetchError: string | null = null;

try {
  const { data, error } = await supabase
    .from('profiles')
    .select('*')
    .order('id', { ascending: true }); // Order by name

  if (error) {
    throw error;
  }
  profiles = data || [];
} catch (error: any) {
  console.error('Error fetching profiles:', error.message);
  fetchError = `No se pudieron cargar los perfiles: ${error.message}`;
}

// Handle POST request for deleting a user
if (Astro.request.method === "POST") {
  const formData = await Astro.request.formData();
  const action = formData.get("action");
  const profileId = formData.get("profileId")?.toString();

  if (action === "delete" && profileId) {
    // IMPORTANT: Deleting a profile might require deleting the associated auth.user first,
    // or handling it via a Supabase Function with admin privileges to avoid foreign key constraints
    // or orphaned auth users. For now, this will attempt to delete from 'profiles' table only.
    
    // First, attempt to delete from auth.users (requires service_role key or admin privileges)
    // This part is complex and might be better handled by a dedicated Supabase function.
    // For now, we'll focus on deleting from the 'profiles' table and acknowledge this limitation.
    // console.warn(`Attempting to delete profile ${profileId}. Ensure corresponding auth.user is also handled.`);

    const { error: deleteProfileError } = await supabase
      .from('profiles')
      .delete()
      .eq('id', profileId);

    if (deleteProfileError) {
      console.error('Error deleting profile:', deleteProfileError.message);
      // Redirect with an error query parameter
      return Astro.redirect(`/dashboard/usuarios?error=${encodeURIComponent(deleteProfileError.message)}`);
    }
    
    // If you also need to delete the auth user (and have the rights):
    // const { error: deleteAuthUserError } = await supabase.auth.admin.deleteUser(profileId); // profileId here should be the user_id
    // if (deleteAuthUserError) {
    //   console.error('Error deleting auth user:', deleteAuthUserError.message);
    //   // Handle this error, maybe the profile was deleted but auth user wasn't.
    // }

    return Astro.redirect("/dashboard/usuarios?success=Usuario eliminado correctamente");
  }
}

// Get feedback messages from URL
const urlParams = new URLSearchParams(Astro.url.search);
const successMessage = urlParams.get('success');
const errorMessage = urlParams.get('error');


const pageTitle = "Gestión de Usuarios";
---

<Layout title={pageTitle}>
  <div class="container mx-auto p-4 md:p-8 max-w-6xl h-screen">
    <header class="mb-8 flex items-center justify-between">
      <div class="flex items-center gap-2">
        <a href="/dashboard" class="text-2xl text-purple-600 hover:text-purple-800 transition" aria-label="Volver al Dashboard">
          <FaArrowLeft size={20} />
        </a>
        <h1 class="text-sm font-bold text-gray-800">{pageTitle}</h1>
      </div>
      <a href="/dashboard/usuarios/crear" class="bg-purple-600 text-xs hover:bg-purple-700 text-white font-semibold py-2 px-4 rounded-lg shadow-md transition-colors duration-200 flex items-center">
        Añadir Usuario
      </a>
    </header>

    {fetchError && (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-6" role="alert">
        <strong class="font-bold">Error de Carga:</strong>
        <span class="block sm:inline">{fetchError}</span>
      </div>
    )}
    {successMessage && (
      <div class="bg-green-100 border border-green-400 text-green-700 px-4 py-3 rounded relative mb-6" role="alert">
        <strong class="font-bold">Éxito:</strong>
        <span class="block sm:inline">{successMessage}</span>
      </div>
    )}
    {errorMessage && (
      <div class="bg-red-100 border border-red-400 text-red-700 px-4 py-3 rounded relative mb-6" role="alert">
        <strong class="font-bold">Error en Acción:</strong>
        <span class="block sm:inline">{errorMessage}</span>
      </div>
    )}

    <div class="bg-white shadow-xl rounded-lg overflow-x-auto">
      <table class="min-w-full table-auto">
        <thead class="bg-gradient-to-r from-pink-500 to-purple-500 text-white">
          <tr>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">ID Perfil</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Nombre</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Email</th>
            <th class="px-6 py-3 text-left text-xs font-medium uppercase tracking-wider">Rol</th>
            <th class="px-6 py-3 text-center text-xs font-medium uppercase tracking-wider">Acciones</th>
          </tr>
        </thead>
        <tbody class="bg-white divide-y divide-gray-200">
          {profiles.length > 0 ? profiles.map(profile => (
            <tr key={profile.id} class="hover:bg-gray-50 transition-colors duration-150">
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-700">
                {profile.id}
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium text-gray-900">{profile.name || 'N/A'}</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600">{profile.email || 'N/A'}</td>
              <td class="px-6 py-4 whitespace-nowrap text-sm text-gray-600">
                <span class:list={[
                  "px-3 py-1 inline-flex text-xs leading-5 font-semibold rounded-full",
                  profile.role === 'Admin' ? 'bg-pink-100 text-pink-800' :
                  profile.role === 'User' ? 'bg-green-100 text-green-800' :
                  'bg-gray-100 text-gray-800'
                ]}>
                  {profile.role || 'No asignado'}
                </span>
              </td>
              <td class="px-6 py-4 whitespace-nowrap text-sm font-medium flex gap-3 justify-center items-center">
                <a href={`/dashboard/usuarios/editar/${profile.id}`} class="text-indigo-600 hover:text-indigo-900 transition-colors p-1 rounded-md hover:bg-indigo-100" title="Editar">
                  <FaEdit size={18}/>
                </a>
                <form method="POST" onsubmit="return confirm('¿Estás seguro de que quieres eliminar este usuario? Esta acción es irreversible y también podría eliminar datos asociados.');" class="inline">
                  <input type="hidden" name="action" value="delete" />
                  <input type="hidden" name="profileId" value={profile.id.toString()} /> {/* Ensure value is string for form */}
                  <button type="submit" class="text-red-600 hover:text-red-900 transition-colors p-1 rounded-md hover:bg-red-100" title="Eliminar">
                    <FaTrashAlt size={18}/>
                  </button>
                </form>
              </td>
            </tr>
          )) : (
            <tr>
              <td colspan="5" class="px-6 py-12 text-center text-sm text-gray-500">
                No se encontraron usuarios.
              </td>
            </tr>
          )}
        </tbody>
      </table>
    </div>
  </div>
</Layout>
      