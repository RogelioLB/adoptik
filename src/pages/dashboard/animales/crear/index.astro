---
import { supabase } from "../../../../lib/supabase";
import type { Database } from "../../../../../database.types"; // Ensure this path is correct
import Layout from "../../../../layouts/Layout.astro";
import { FaArrowLeft, FaSave } from 'react-icons/fa';

// Role-based access control
const { data: {session: adminSession} } = await supabase.auth.getSession();
const {data: adminUser} = await supabase.from("profiles").select("role").eq("user_id", adminSession?.user.id).single()
if (!adminSession || adminUser?.role !== 'Admin') {
  return Astro.redirect('/');
}

let formError: string | null = null;
let formSuccess: string | null = null;

const BUCKET_NAME = 'avatars'; // Define your bucket name

if (Astro.request.method === "POST") {
  try {
    const formData = await Astro.request.formData();
    const name = formData.get("name")?.toString();
    const species = formData.get("species")?.toString();
    const ageString = formData.get("age")?.toString();
    const description = formData.get("description")?.toString();
    const imageFile = formData.get("image_url") as File;

    let imageUrlToStore: string | null = null;

    // Basic validation
    if (!name || !species || !ageString) {
      formError = "Por favor, completa todos los campos obligatorios: Nombre, Especie, Edad.";
    } else {
      const age = parseInt(ageString, 10);
      if (isNaN(age)) {
        formError = "La edad debe ser un número válido.";
      } else {
        // Handle file upload if a file is provided
        if (imageFile && imageFile.size > 0) {
          const fileExt = imageFile.name.split('.').pop();
          const randomSuffix = Math.random().toString(36).substring(2, 10);
          const newFileName = `${Date.now()}_${randomSuffix}.${fileExt}`;
          const filePath = `${newFileName}`;

          const { data: uploadData, error: uploadError } = await supabase.storage
            .from(BUCKET_NAME)
            .upload(filePath, imageFile, {
              cacheControl: '3600',
              upsert: false
            });

          if (uploadError) {
            console.error('Error uploading image:', uploadError);
            throw new Error(`Error al subir la imagen: ${uploadError.message}`);
          }

          const { data: publicUrlData } = supabase.storage
            .from(BUCKET_NAME)
            .getPublicUrl(filePath);
          imageUrlToStore = publicUrlData.publicUrl;
        }

        const animalData: Database['public']['Tables']['animals']['Insert'] = {
          name,
          species,
          age,
          description,
          image_url: imageUrlToStore,
        };

        const { data: insertData, error: insertError } = await supabase
          .from('animals')
          .insert([animalData])
          .select();

        if (insertError) {
          console.error('Error creating animal:', insertError.message);
          throw new Error(`Error al crear el animal: ${insertError.message}`);
        }

        formSuccess = `Animal '${name}' creado exitosamente.`;
        // Consider redirecting or clearing form state here
        // return Astro.redirect('/dashboard/animales?created=true');
      }
    }
  } catch (e: any) {
    formError = e.message || "Ocurrió un error inesperado.";
    console.error(e);
  }
}
---

<Layout title="Crear Nuevo Animal - Dashboard">
  <div class="container mx-auto p-4 md:p-8 max-w-3xl">
    <header class="mb-8 flex items-center gap-4">
      <a href="/dashboard/animales" class="text-2xl text-purple-600 hover:text-purple-800 transition" aria-label="Volver a Gestión de Animales">
        <FaArrowLeft />
      </a>
      <h1 class="text-3xl font-bold text-gray-800">Crear Nuevo Animal</h1>
    </header>

    {formError && (
      <div class="bg-red-100 border-l-4 border-red-500 text-red-700 p-4 mb-6" role="alert">
        <p class="font-bold">Error</p>
        <p>{formError}</p>
      </div>
    )}
    {formSuccess && (
      <div class="bg-green-100 border-l-4 border-green-500 text-green-700 p-4 mb-6" role="alert">
        <p class="font-bold">Éxito</p>
        <p>{formSuccess} Puedes <a href="/dashboard/animales" class="font-semibold underline hover:text-green-800">ver la lista de animales</a> o agregar otro.</p>
      </div>
    )}

    <form method="POST" class="bg-white shadow-xl rounded-lg p-6 md:p-8 space-y-6" enctype="multipart/form-data">
      <div>
        <label for="name" class="block text-sm font-medium text-gray-700 mb-1">Nombre del Animal <span class="text-red-500">*</span></label>
        <input type="text" name="name" id="name" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500 sm:text-sm p-2" />
      </div>

      <div class="grid grid-cols-1 md:grid-cols-2 gap-6">
        <div>
          <label for="species" class="block text-sm font-medium text-gray-700 mb-1">Especie <span class="text-red-500">*</span> (ej: Perro, Gato)</label>
          <input type="text" name="species" id="species" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500 sm:text-sm p-2" />
        </div>
        <div>
          <label for="age" class="block text-sm font-medium text-gray-700 mb-1">Edad (años) <span class="text-red-500">*</span></label>
          <input type="number" name="age" id="age" required class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500 sm:text-sm p-2" />
        </div>
      </div>

      <div>
        <label for="image_url" class="block text-sm font-medium text-gray-700 mb-1">Imagen de Perfil del Animal</label>
        <input type="file" name="image_url" id="image_url" accept="image/png, image/jpeg, image/webp" class="mt-1 block w-full text-sm text-gray-500 file:mr-4 file:py-2 file:px-4 file:rounded-full file:border-0 file:text-sm file:font-semibold file:bg-purple-50 file:text-purple-700 hover:file:bg-purple-100"/>
        <p class="mt-1 text-xs text-gray-500">PNG, JPG, WEBP hasta 5MB.</p>
      </div>

      <div>
        <label for="description" class="block text-sm font-medium text-gray-700 mb-1">Descripción</label>
        <textarea name="description" id="description" rows="4" class="mt-1 block w-full rounded-md border-gray-300 shadow-sm focus:border-purple-500 focus:ring-purple-500 sm:text-sm p-2"></textarea>
      </div>

      <div class="flex justify-end pt-4">
        <button type="submit" class="bg-purple-600 hover:bg-purple-700 text-white font-semibold py-2 px-6 rounded-lg shadow-md transition-colors duration-200 flex items-center">
          <FaSave className="mr-2" /> Guardar Animal
        </button>
      </div>
    </form>
  </div>
</Layout>
